----------------------------------------------------
-- (c) Alexandre Joannou, University of Cambridge --
----------------------------------------------------

instruction Decode (inst::ByteStream) = match inst
{
  case 0x00 @ _         => {implied; Sys (BRK)}
  case 0x01 @ a @ _     => Logical (ORA (indexed_indirect_x (a)))
  case 0x05 @ a @ _     => Logical (ORA (zero_page (a)))
  case 0x06 @ a @ _     => Shift   (ASL (zero_page (a)))
  case 0x08 @ _         => {implied; Stack (PHP)}
  case 0x09 @ a @ _     => Logical (ORA (immediate (a)))
  case 0x0A @ _         => Shift   (ASL (accumulator))
  case 0x0D @ a @ b @ _ => Logical (ORA (absolute (a, b)))
  case 0x0E @ a @ b @ _ => Shift   (ASL (absolute (a, b)))
  case 0x10 @ a @ _     => Branch  (BPL (relative (a)))
  case 0x11 @ a @ _     => Logical (ORA (indirect_indexed_y (a)))
  case 0x15 @ a @ _     => Logical (ORA (zero_page_x (a)))
  case 0x16 @ a @ _     => Shift   (ASL (zero_page_x (a)))
  case 0x18 @ _         => {implied; Flags (CLC)}
  case 0x19 @ a @ b @ _ => Logical (ORA (absolute_y (a, b)))
  case 0x1D @ a @ b @ _ => Logical (ORA (absolute_x (a, b)))
  case 0x1E @ a @ b @ _ => Shift   (ASL (absolute_x (a, b)))
  case 0x20 @ a @ b @ _ => Jump    (JSR (absolute (a, b)))
  case 0x21 @ a @ _     => Logical (AND (indexed_indirect_x (a)))
  case 0x24 @ a @ _     => Logical (BIT (zero_page (a)))
  case 0x25 @ a @ _     => Logical (AND (zero_page (a)))
  case 0x26 @ a @ _     => Shift   (ROL (zero_page (a)))
  case 0x28 @ _         => {implied; Stack (PLP)}
  case 0x29 @ a @ _     => Logical (AND (immediate (a)))
  case 0x2A @ _         => Shift   (ROL (accumulator))
  case 0x2C @ a @ b @ _ => Logical (BIT (absolute (a, b)))
  case 0x2D @ a @ b @ _ => Logical (AND (absolute (a, b)))
  case 0x2E @ a @ b @ _ => Shift   (ROL (absolute (a, b)))
  case 0x30 @ a @ _     => Branch  (BMI (relative (a)))
  case 0x31 @ a @ _     => Logical (AND (indirect_indexed_y (a)))
  case 0x35 @ a @ _     => Logical (AND (zero_page_x (a)))
  case 0x36 @ a @ _     => Shift   (ROL (zero_page_x (a)))
  case 0x38 @ _         => {implied; Flags (SEC)}
  case 0x39 @ a @ b @ _ => Logical (AND (absolute_y (a, b)))
  case 0x3D @ a @ b @ _ => Logical (AND (absolute_x (a, b)))
  case 0x3E @ a @ b @ _ => Shift   (ROL (absolute_x (a, b)))
  case 0x40 @ _         => {implied; Sys (RTI)}
  case 0x41 @ a @ _     => Logical (EOR (indexed_indirect_x (a)))
  case 0x45 @ a @ _     => Logical (EOR (zero_page (a)))
  case 0x46 @ a @ _     => Shift   (LSR (zero_page (a)))
  case 0x48 @ _         => {implied; Stack (PHA)}
  case 0x49 @ a @ _     => Logical (EOR (immediate (a)))
  case 0x4A @ _         => Shift   (LSR (accumulator))
  case 0x4C @ a @ b @ _ => Jump    (JMP (absolute (a, b)))
  case 0x4D @ a @ b @ _ => Logical (EOR (absolute (a, b)))
  case 0x4E @ a @ b @ _ => Shift   (LSR (absolute (a, b)))
  case 0x50 @ a @ _     => Branch  (BVC (relative (a)))
  case 0x51 @ a @ _     => Logical (EOR (indirect_indexed_y (a)))
  case 0x55 @ a @ _     => Logical (EOR (zero_page_x (a)))
  case 0x56 @ a @ _     => Shift   (LSR (zero_page_x (a)))
  case 0x58 @ _         => {implied; Flags (CLI)}
  case 0x59 @ a @ b @ _ => Logical (EOR (absolute_y (a, b)))
  case 0x5D @ a @ b @ _ => Logical (EOR (absolute_x (a, b)))
  case 0x5E @ a @ b @ _ => Shift   (LSR (absolute_x (a, b)))
  case 0x60 @ _         => {implied; Jump (RTS)}
  case 0x61 @ a @ _     => Arith   (ADC (indexed_indirect_x (a)))
  case 0x65 @ a @ _     => Logical (EOR (zero_page (a)))
  case 0x66 @ a @ _     => Shift   (LSR (zero_page (a)))
  case 0x68 @ _         => {implied; Stack (PLA)}
  case 0x69 @ a @ _     => Arith   (ADC (immediate (a)))
  case 0x6A @ _         => Shift   (ROR(accumulator))
  case 0x6C @ a @ b @ _ => Jump    (JMP (absolute_indirect (a, b)))
  case 0x6D @ a @ b @ _ => Arith   (ADC (absolute (a, b)))
  case 0x6E @ a @ b @ _ => Shift   (ROR (absolute (a, b)))
  case 0x70 @ a @ _     => Branch  (BVS (relative (a)))
  case 0x71 @ a @ _     => Arith   (ADC (indirect_indexed_y (a)))
  case 0x75 @ a @ _     => Arith   (ADC (zero_page_x (a)))
  case 0x76 @ a @ _     => Shift   (ROR (zero_page_x (a)))
  case 0x78 @ _         => {implied; Flags (SEI)}
  case 0x79 @ a @ b @ _ => Arith   (ADC (absolute_y (a, b)))
  case 0x7D @ a @ b @ _ => Arith   (ADC (absolute_x (a, b)))
  case 0x7E @ a @ b @ _ => Shift   (ROR (absolute_x (a, b)))
  case 0x81 @ a @ _     => Store   (STA (indexed_indirect_x (a)))
  case 0x84 @ a @ _     => Store   (STY (zero_page (a)))
  case 0x85 @ a @ _     => Store   (STA (zero_page (a)))
  case 0x86 @ a @ _     => Store   (STX (zero_page (a)))
  case 0x88 @ _         => {implied; Dec (DEY)}
  case 0x8A @ _         => {implied; Transfer (TXA)}
  case 0x8C @ a @ b @ _ => Store   (STY (absolute (a, b)))
  case 0x8D @ a @ b @ _ => Store   (STA (absolute (a, b)))
  case 0x8E @ a @ b @ _ => Store   (STX (absolute (a, b)))
  case 0x90 @ a @ _     => Branch  (BCC (relative (a)))
  case 0x91 @ a @ _     => Store   (STA (indirect_indexed_y (a)))
  case 0x94 @ a @ _     => Store   (STY (zero_page_x (a)))
  case 0x95 @ a @ _     => Store   (STA (zero_page_x (a)))
  case 0x96 @ a @ _     => Store   (STX (zero_page_y (a)))
  case 0x98 @ _         => {implied; Transfer (TYA)}
  case 0x99 @ a @ b @ _ => Store   (STA (absolute_y (a, b)))
  case 0x9A @ _         => {implied; Stack (TXS)}
  case 0x9D @ a @ b @ _ => Store   (STA (absolute_x (a, b)))
  case 0xA0 @ a @ _     => Load    (LDY (immediate (a)))
  case 0xA1 @ a @ _     => Load    (LDA (indexed_indirect_x (a)))
  case 0xA2 @ a @ _     => Load    (LDX (immediate (a)))
  case 0xA4 @ a @ _     => Load    (LDY (zero_page (a)))
  case 0xA5 @ a @ _     => Load    (LDA (zero_page (a)))
  case 0xA6 @ a @ _     => Load    (LDX (zero_page (a)))
  case 0xA8 @ _         => {implied; Transfer (TAY)}
  case 0xA9 @ a @ _     => Load    (LDA (immediate (a)))
  case 0xAA @ _         => {implied; Transfer (TAX)}
  case 0xAC @ a @ b @ _ => Load    (LDY (absolute (a, b)))
  case 0xAD @ a @ b @ _ => Load    (LDA (absolute (a, b)))
  case 0xAE @ a @ b @ _ => Load    (LDX (absolute (a, b)))
  case 0xB0 @ a @ _     => Branch  (BCS (relative (a)))
  case 0xB1 @ a @ _     => Load    (LDA (indirect_indexed_y (a)))
  case 0xB4 @ a @ _     => Load    (LDY (zero_page_x (a)))
  case 0xB5 @ a @ _     => Load    (LDA (zero_page_x (a)))
  case 0xB6 @ a @ _     => Load    (LDX (zero_page_y (a)))
  case 0xB8 @ _         => {implied; Flags (CLV)}
  case 0xB9 @ a @ b @ _ => Load    (LDA (absolute_y (a, b)))
  case 0xBA @ _         => {implied; Stack (TSX)}
  case 0xBC @ a @ b @ _ => Load    (LDY (absolute_x (a, b)))
  case 0xBD @ a @ b @ _ => Load    (LDA (absolute_x (a, b)))
  case 0xBE @ a @ b @ _ => Load    (LDX (absolute_y (a, b)))
  case 0xC0 @ a @ _     => Arith   (CPY (immediate (a)))
  case 0xC1 @ a @ _     => Arith   (CMP (indexed_indirect_x (a)))
  case 0xC4 @ a @ _     => Arith   (CPY (zero_page (a)))
  case 0xC5 @ a @ _     => Arith   (CMP (zero_page (a)))
  case 0xC6 @ a @ _     => Dec     (DEC (zero_page (a)))
  case 0xC8 @ _         => {implied; Inc (INY)}
  case 0xC9 @ a @ _     => Arith   (CMP (immediate (a)))
  case 0xCA @ _         => {implied; Dec (DEX)}
  case 0xCC @ a @ b @ _ => Arith   (CPY (absolute (a, b)))
  case 0xCD @ a @ b @ _ => Arith   (CMP (absolute (a, b)))
  case 0xCE @ a @ b @ _ => Dec     (DEC (absolute (a, b)))
  case 0xD0 @ a @ _     => Branch  (BNE (relative (a)))
  case 0xD1 @ a @ _     => Arith   (CMP (indirect_indexed_y (a)))
  case 0xD5 @ a @ _     => Arith   (CMP (zero_page_x (a)))
  case 0xD6 @ a @ _     => Dec     (DEC (zero_page_x (a)))
  case 0xD8 @ _         => {implied; Flags (CLD)}
  case 0xD9 @ a @ b @ _ => Arith   (CMP (absolute_y (a, b)))
  case 0xDD @ a @ b @ _ => Arith   (CMP (absolute_x (a, b)))
  case 0xDE @ a @ b @ _ => Dec     (DEC (absolute_x (a, b)))
  case 0xE0 @ a @ _     => Arith   (CPX (immediate (a)))
  case 0xE1 @ a @ _     => Arith   (SBC (indexed_indirect_x (a)))
  case 0xE4 @ a @ _     => Arith   (CPX (zero_page (a)))
  case 0xE5 @ a @ _     => Arith   (SBC (zero_page (a)))
  case 0xE6 @ a @ _     => Inc     (INC (zero_page (a)))
  case 0xE8 @ _         => {implied; Inc (INX)}
  case 0xE9 @ a @ _     => Arith   (SBC (immediate (a)))
  case 0xEA @ _         => {implied; Sys (NOP)}
  case 0xEC @ a @ b @ _ => Arith   (CPX (absolute (a, b)))
  case 0xED @ a @ b @ _ => Arith   (SBC (absolute (a, b)))
  case 0xEE @ a @ b @ _ => Inc     (INC (absolute (a, b)))
  case 0xF0 @ a @ _     => Branch  (BEQ (relative (a)))
  case 0xF1 @ a @ _     => Arith   (SBC (indirect_indexed_y (a)))
  case 0xF5 @ a @ _     => Arith   (SBC (zero_page_x (a)))
  case 0xF6 @ a @ _     => Inc     (INC (zero_page_x (a)))
  case 0xF8 @ _         => {implied; Flags (SED)}
  case 0xF9 @ a @ b @ _ => Arith   (SBC (absolute_y (a, b)))
  case 0xFD @ a @ b @ _ => Arith   (SBC (absolute_x (a, b)))
  case 0xFE @ a @ b @ _ => Inc     (INC (absolute_x (a, b)))
  -- reserved instructions
  case _ => UnknownInstruction
}
